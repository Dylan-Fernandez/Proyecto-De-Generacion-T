generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model Addresses {
  id      Int     @id @default(autoincrement()) // Elimina el map
  userId  Int
  label   String? // Elimina el @db.NVarChar(50)
  street  String  // Elimina el @db.NVarChar(255)
  city    String  // Elimina el @db.NVarChar(100)
  state   String? // Elimina el @db.NVarChar(100)
  country String  // Elimina el @db.NVarChar(100)
  postal  String? // Elimina el @db.NVarChar(20)
  Users   Users   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model CartItems {
  id        Int      @id @default(autoincrement()) // Elimina el map
  cartId    Int
  productId Int
  qty       Int?     @default(1) // Elimina el map
  Carts     Carts    @relation(fields: [cartId], references: [id], onDelete: Cascade, onUpdate: NoAction)
  Products  Products @relation(fields: [productId], references: [id], onUpdate: NoAction)
}

model Carts {
  id        Int         @id @default(autoincrement()) // Elimina el map
  userId    Int
  createdAt DateTime?   @default(now()) // Elimina el map y usa `now()`
  CartItems CartItems[]
  Users     Users       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model Products {
  id          Int         @id @default(autoincrement()) // Elimina el map
  name        String      // Elimina el @db.NVarChar(255)
  description String?     // Elimina el @db.NVarChar(Max)
  price       Float
  imageUrl    String?     // Elimina el @db.NVarChar(500)
  createdAt   DateTime?   @default(now()) // Elimina el dbgenerated
  updatedAt   DateTime?   @default(now()) // Elimina el dbgenerated
  CartItems   CartItems[]
}

model Roles {
  id    Int     @id @default(autoincrement())  // Elimina el map
  name  String  @unique // Elimina el @db.NVarChar(50)
  Users Users[]
}

model Users {
  id        Int         @id @default(autoincrement()) // Elimina el map
  email     String      @unique // Elimina el @db.NVarChar(255)
  password  String      // Elimina el @db.NVarChar(255)
  name      String?     // Elimina el @db.NVarChar(100)
  role      String      @default("USER") // Elimina el map y usa `default`
  createdAt DateTime?   @default(now()) // Elimina el map y usa `now()`
  updatedAt DateTime?   @default(now()) // Elimina el map y usa `now()`
  roleId    Int?
  Addresses Addresses[]
  Carts     Carts[]
  Roles     Roles?      @relation(fields: [roleId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}